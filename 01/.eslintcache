[{"H:\\it-project\\first-project\\01\\src\\Components\\OnOff\\OnOff.tsx":"1","H:\\it-project\\first-project\\01\\src\\Components\\UseCallback.tsx":"2","H:\\it-project\\first-project\\01\\src\\Components\\ReactMemo.tsx":"3","H:\\it-project\\first-project\\01\\src\\App.tsx":"4","H:\\it-project\\first-project\\01\\src\\Components\\UseState.tsx":"5","H:\\it-project\\first-project\\01\\src\\Components\\UseEffect.tsx":"6","H:\\it-project\\first-project\\01\\src\\Components\\Uncontrolled_Input\\UncontrolledInput.tsx":"7","H:\\it-project\\first-project\\01\\src\\index.tsx":"8","H:\\it-project\\first-project\\01\\src\\Components\\Accordion\\Accordion.tsx":"9","H:\\it-project\\first-project\\01\\src\\Components\\Clock\\Clock.tsx":"10"},{"size":1247,"mtime":1617398526353,"results":"11","hashOfConfig":"12"},{"size":1449,"mtime":1618687370162,"results":"13","hashOfConfig":"12"},{"size":1088,"mtime":1618686431076,"results":"14","hashOfConfig":"12"},{"size":3184,"mtime":1618692248663,"results":"15","hashOfConfig":"12"},{"size":1066,"mtime":1618691643016,"results":"16","hashOfConfig":"12"},{"size":771,"mtime":1618696343528,"results":"17","hashOfConfig":"12"},{"size":1558,"mtime":1617396584685,"results":"18","hashOfConfig":"12"},{"size":454,"mtime":1611864436005,"results":"19","hashOfConfig":"12"},{"size":1271,"mtime":1616069117571,"results":"20","hashOfConfig":"12"},{"size":821,"mtime":1618856234311,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"4nsxkg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"H:\\it-project\\first-project\\01\\src\\Components\\OnOff\\OnOff.tsx",[],["44","45"],"H:\\it-project\\first-project\\01\\src\\Components\\UseCallback.tsx",["46"],"import React, {useCallback, useMemo, useState} from \"react\";\r\n\r\nconst MessageCounter = (props: { count: number }) => {\r\n    return <div>{props.count}</div>\r\n}\r\nconst MessageCounter2 = React.memo(MessageCounter)\r\nconst BooksSecret = (props: {\r\n    books: Array<string>;\r\n    addBook: () => void }) => {\r\n    console.log('books')\r\n    return <div>\r\n        <button onClick={props.addBook}> add book</button>\r\n        {props.books.map((b, i) => <div key={i}> {b}</div>)}\r\n    </div>\r\n}\r\nconst Books = React.memo(BooksSecret)\r\n\r\n\r\nconst LikeUseCallback = () => {\r\n    console.log('UseCallback component')\r\n    const [counter, setCounter] = useState(0);\r\n    const [books, setBooks] = useState(['React', 'JS']);\r\n\r\n\r\n\r\n  /*  const memoizedAddBook = useMemo(() => {\r\n        return () => {\r\n            const newUsers = [...books, 'Angular' + new Date().getTime()]\r\n            setBooks(newUsers)\r\n        }\r\n    }, [books])*/\r\n\r\n\r\n    const memoizedAddBook = useCallback(() => {\r\n        console.log('add book')\r\n            const newBooks = [...books, 'Angular' + new Date().getTime()]\r\n            setBooks(newBooks)\r\n    }, [books])\r\n\r\n    return <>\r\n        <h3>UseCallback</h3>\r\n        <button onClick={() => setCounter(counter + 1)}> +</button>\r\n        <span> Counter</span>\r\n        <MessageCounter2 count={counter}/>\r\n        <Books books={books}\r\n               addBook={memoizedAddBook}\r\n        />\r\n    </>\r\n}\r\nexport default LikeUseCallback","H:\\it-project\\first-project\\01\\src\\Components\\ReactMemo.tsx",[],"H:\\it-project\\first-project\\01\\src\\App.tsx",["47","48"],"H:\\it-project\\first-project\\01\\src\\Components\\UseState.tsx",[],"H:\\it-project\\first-project\\01\\src\\Components\\UseEffect.tsx",[],"H:\\it-project\\first-project\\01\\src\\Components\\Uncontrolled_Input\\UncontrolledInput.tsx",[],"H:\\it-project\\first-project\\01\\src\\index.tsx",[],"H:\\it-project\\first-project\\01\\src\\Components\\Accordion\\Accordion.tsx",[],"H:\\it-project\\first-project\\01\\src\\Components\\Clock\\Clock.tsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":29,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"57","line":22,"column":10,"nodeType":"55","messageId":"56","endLine":22,"endColumn":18},{"ruleId":"53","severity":1,"message":"58","line":22,"column":20,"nodeType":"55","messageId":"56","endLine":22,"endColumn":31},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'switchOn' is assigned a value but never used.","'setSwitchOn' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]